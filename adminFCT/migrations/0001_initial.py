# Generated by Django 4.1.2 on 2023-02-13 13:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_contact', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ciclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abre', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomEmp', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomEmp', models.CharField(max_length=100)),
                ('logo', models.FileField(upload_to='img/')),
                ('razon', models.CharField(max_length=100)),
                ('numTra', models.DecimalField(decimal_places=0, default=0, max_digits=10)),
                ('web', models.URLField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Forma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desFor', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Medio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomMed', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomPer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Ramo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desRam', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Requisito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomReq', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tamano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desTam', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomToo', models.CharField(max_length=100)),
                ('lenguaje', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nomAlu', models.CharField(max_length=100)),
                ('movil', models.CharField(max_length=20)),
                ('mail', models.EmailField(max_length=254)),
                ('curri', models.URLField()),
                ('proy', models.URLField()),
                ('fnac', models.DateTimeField()),
                ('sex', models.CharField(max_length=1)),
                ('dis', models.DecimalField(decimal_places=0, default=0, max_digits=3)),
                ('cpAlu', models.DecimalField(decimal_places=0, default=0, max_digits=20)),
            ],
        ),
        migrations.CreateModel(
            name='Contacto',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('mailCon', models.EmailField(max_length=254)),
                ('empleado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Sede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpsed', models.DecimalField(decimal_places=0, default=0, max_digits=20)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conte', models.CharField(max_length=1000)),
                ('fmen', models.DateTimeField(blank=True, null=True)),
                ('emitido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emitido', to='adminFCT.empleado')),
                ('hilos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminFCT.mensaje')),
                ('medio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminFCT.medio')),
                ('recibido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recibido', to='adminFCT.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Funcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomFun', models.CharField(max_length=100)),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.perfil')),
            ],
        ),
        migrations.AddField(
            model_name='empresa',
            name='forma',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminFCT.forma'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='ramo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminFCT.ramo'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='tam',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminFCT.tamano'),
        ),
        migrations.CreateModel(
            name='Trayecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fpromo', models.DateTimeField()),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.ciclo')),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.alumno')),
            ],
        ),
        migrations.CreateModel(
            name='Practica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fIni', models.DateTimeField(blank=True, null=True)),
                ('fFin', models.DateTimeField(blank=True, null=True)),
                ('tele', models.BooleanField()),
                ('E', models.BooleanField()),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.ciclo')),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.alumno')),
                ('contacto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.contacto')),
                ('profesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.profesor')),
            ],
        ),
        migrations.CreateModel(
            name='Oferta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomOfe', models.CharField(max_length=100)),
                ('fofe', models.DateTimeField(blank=True, null=True)),
                ('kas', models.DecimalField(decimal_places=0, default=0, max_digits=10)),
                ('tele', models.BooleanField()),
                ('bibliotecas', models.ManyToManyField(to='adminFCT.funcion')),
                ('competencias', models.ManyToManyField(to='adminFCT.perfil')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.empresa')),
                ('especifaciones', models.ManyToManyField(to='adminFCT.requisito')),
                ('toolboxes', models.ManyToManyField(to='adminFCT.tool')),
                ('contacto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.contacto')),
            ],
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pra', models.BooleanField()),
                ('iniCon', models.DateTimeField(blank=True, null=True)),
                ('finCon', models.DateTimeField(blank=True, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.empresa')),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.alumno')),
            ],
        ),
        migrations.AddField(
            model_name='contacto',
            name='empresa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminFCT.empresa'),
        ),
    ]
